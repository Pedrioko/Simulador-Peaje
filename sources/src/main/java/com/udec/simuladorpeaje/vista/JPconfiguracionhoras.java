/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.udec.simuladorpeaje.vista;

import com.udec.simuladorpeaje.distribuciones.sistemapicos.Dia;
import com.udec.simuladorpeaje.distribuciones.sistemapicos.Hora;
import com.udec.simuladorpeaje.distribuciones.sistemapicos.Mes;
import com.udec.simuladorpeaje.distribuciones.sistemapicos.Semana;
import com.udec.simuladorpeaje.logica.Configuracion;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author Estudiante
 */
public final class JPconfiguracionhoras extends javax.swing.JPanel {

    /**
     * Creates new form JPconfiguracionhoras
     */
    public JPconfiguracionhoras() {
        initComponents();
        cargar();
        String[] dias = new String[]{"Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"};
        String[] horas = new String[]{
            "0 - AM", "1 - AM", "2 - AM", "3 - AM", "4 - AM", "5 - AM", "6 - AM", "7 - AM", "8 - AM", "9 - AM", "10 - AM", "11 - AM",
            "12 - M", "1 - PM", "2 - PM", "3 - PM", "4 - PM", "5 - PM", "6 - PM", "7 - PM", "8 - PM", "9 - PM", "10 - PM", "11 - PM",};
        JCBdias.removeAllItems();
        for (String dia : dias) {
            JCBdias.addItem(dia);
        }
        JCBhorainicio.removeAllItems();
        for (String hora : horas) {
            JCBhorainicio.addItem(hora);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JThoras = new javax.swing.JTable();
        JBactualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        JCBdias = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        JCBhorainicio = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configuración de Horas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        JThoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JThoras);

        JBactualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1408842495_refresh.png"))); // NOI18N
        JBactualizar.setText("Actualizar Hotas");
        JBactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBactualizarActionPerformed(evt);
            }
        });

        jLabel1.setText("Dia de inicio");

        JCBdias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Hora de inicio");

        JCBhorainicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JBactualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(JCBdias, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JCBhorainicio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(JCBdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(JCBhorainicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBactualizar)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JBactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBactualizarActionPerformed
        this.actualizar();
        JOptionPane.showMessageDialog(null, "Actualización exitosa", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_JBactualizarActionPerformed

    /**
     *
     */
    public void actualizar() {
        Configuracion.getInstancia().setHoraInicio(JCBhorainicio.getSelectedIndex());
        DefaultTableModel tm = (DefaultTableModel) JThoras.getModel();
        Mes mes = new Mes();
        String diainicial = JCBdias.getSelectedItem().toString();
        int horainicial = JCBhorainicio.getSelectedIndex();
        Semana semana1 = new Semana();
        Semana semana2 = new Semana();
        Semana semana3 = new Semana();
        Semana semana4 = new Semana();
        Semana semana5 = new Semana();
        int column = 1;
        int column2 = 1;

        int w = 0;
        if (diainicial.equals("Lunes")) {
            w = 0;
            column = 1;
        }
        if (diainicial.equals("Martes")) {
            w = 1;
            column = 2;
            column2 = 2;
        }
        if (diainicial.equals("Miercoles")) {
            w = 2;
            column = 3;
            column2 = 3;
        }
        if (diainicial.equals("Jueves")) {
            w = 3;
            column = 4;
            column2 = 4;
        }
        if (diainicial.equals("Viernes")) {
            w = 4;
            column = 5;
            column2 = 5;
        }
        if (diainicial.equals("Sabado")) {
            w = 5;
            column = 6;
            column2 = 6;
        }
        if (diainicial.equals("Domingo")) {
            w = 6;
            column = 7;
            column2 = 7;
        }
        int columnname = w + 1;
        int x = w + 1;
        for (int i = w; i < 7; i++) {
            Dia dia = new Dia();
            if (i > JCBdias.getSelectedIndex()) {
                dia.setDianombre(tm.getColumnName(columnname));
                for (int j = 0; j < 24; j++) {
                    Hora hora = new Hora();
                    if (tm.getValueAt(j, column).equals("Hora Pico")) {
                        hora.setPico(Boolean.TRUE);
                        hora.setValle(Boolean.FALSE);
                    }
                    if (tm.getValueAt(j, column).equals("Hora Valle")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.TRUE);
                    }
                    if (tm.getValueAt(j, column).equals("Hora Normal")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.FALSE);
                    }
                    dia.addHora(hora);
                }
            } else {
                dia.setDianombre(tm.getColumnName(columnname));
                for (int j = horainicial; j < 24; j++) {
                    Hora hora = new Hora();
                    if (tm.getValueAt(j, column).equals("Hora Pico")) {
                        hora.setPico(Boolean.TRUE);
                        hora.setValle(Boolean.FALSE);
                    }
                    if (tm.getValueAt(j, column).equals("Hora Valle")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.TRUE);
                    }
                    if (tm.getValueAt(j, column).equals("Hora Normal")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.FALSE);
                    }
                    dia.addHora(hora);
                }
            }
            semana1.addDias(dia);
            column++;
            columnname++;
        }
        int row = 0;
        column = 1;
        for (int i = 0; i < x; i++) {
            row = 0;
            Dia dia = new Dia();
            if (i == JCBdias.getSelectedIndex()) {
                dia.setDianombre(tm.getColumnName(column2));
                for (int j = 0; j < horainicial; j++) {
                    Hora hora = new Hora();
                    if (tm.getValueAt(row, column2).equals("Hora Pico")) {
                        hora.setPico(Boolean.TRUE);
                        hora.setValle(Boolean.FALSE);
                    }
                    if (tm.getValueAt(row, column2).equals("Hora Valle")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.TRUE);
                    }
                    if (tm.getValueAt(row, column2).equals("Hora Normal")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.FALSE);
                    }
                    row++;
                    dia.addHora(hora);
                }
                column2++;
            }
            if (i < JCBdias.getSelectedIndex()) {
                dia.setDianombre(tm.getColumnName(column));
                for (int j = 0; j < 24; j++) {
                    Hora hora = new Hora();
                    if (tm.getValueAt(row, column).equals("Hora Pico")) {
                        hora.setPico(Boolean.TRUE);
                        hora.setValle(Boolean.FALSE);
                    }
                    if (tm.getValueAt(row, column).equals("Hora Valle")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.TRUE);
                    }
                    if (tm.getValueAt(row, column).equals("Hora Normal")) {
                        hora.setPico(Boolean.FALSE);
                        hora.setValle(Boolean.FALSE);
                    }
                    row++;
                    dia.addHora(hora);
                }
            }
            semana5.addDias(dia);
            column++;
        }
        for (int i = 1; i < 8; i++) {
            Dia dia = new Dia();
            dia.setDianombre(tm.getColumnName(i));
            for (int j = 0; j < 24; j++) {
                Hora h = new Hora();
                if (tm.getValueAt(j, i).equals("Hora Pico")) {
                    h.setPico(Boolean.TRUE);
                    h.setValle(Boolean.FALSE);
                }
                if (tm.getValueAt(j, i).equals("Hora Valle")) {
                    h.setPico(Boolean.FALSE);
                    h.setValle(Boolean.TRUE);
                }
                if (tm.getValueAt(j, i).equals("Hora Normal")) {
                    h.setPico(Boolean.FALSE);
                    h.setValle(Boolean.FALSE);
                }
                dia.addHora(h);
            }
            semana2.addDias(dia);
            semana3.addDias(dia);
            semana4.addDias(dia);
        }
        mes.addSemanas(semana1);
        mes.addSemanas(semana2);
        mes.addSemanas(semana3);
        mes.addSemanas(semana4);
        mes.addSemanas(semana5);
        System.out.println("mes " + mes.toString());
        Configuracion.getInstancia().setMes(mes);

    }

    /**
     *
     */
    public void cargar() {
        Class[] typex = new Class[8];

        for (int i = 0; i < 8; i++) {
            typex[i] = java.lang.String.class;

        }
        Boolean[] canEdit = new Boolean[]{false, true, true, true, true, true, true, true, true};
        String[] cabecera = new String[]{"Hora", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"};
        String[] columnauno = new String[]{
            "0 - AM", "1 - AM", "2 - AM", "3 - AM", "4 - AM", "5 - AM", "6 - AM", "7 - AM", "8 - AM", "9 - AM", "10 - AM", "11 - AM",
            "12 - M", "1 - PM", "2 - PM", "3 - PM", "4 - PM", "5 - PM", "6 - PM", "7 - PM", "8 - PM", "9 - PM", "10 - PM", "11 - PM",};
        Object[][] contenido = new Object[24][8];
        for (int i = 0; i < 24; i++) {
            contenido[i][0] = columnauno[i];
        }
        for (int i = 0; i < 24; i++) {
            for (int j = 1; j < 8; j++) {
                contenido[i][j] = "";
            }
        }
        DefaultTableModel tm = new DefaultTableModel(contenido, cabecera) {
            Class[] types = typex;

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        for (Semana s : Configuracion.getInstancia().getSemanas()) {
            int column = 1;
            for (Dia d : s.getDias()) {
                int row = 0;
                for (Hora h : d.getHoras()) {
                    if (h.isPico()) {
                        tm.setValueAt("Hora Pico", row, column);
                    }
                    if (h.isValle()) {
                        tm.setValueAt("Hora Valle", row, column);
                    }
                    if (!h.isPico() && !h.isValle()) {
                        tm.setValueAt("Hora Normal", row, column);
                    }
                    row++;
                }
                column++;
            }
        }
        String[] datos = {"Hora Valle", "Hora Normal", "Hora Pico"};
        JComboBox jcb = new JComboBox(datos);
        jcb.setSelectedIndex(0);
        JThoras.setModel(tm);
        for (int i = 1; i < 8; i++) {
            TableColumn tc = JThoras.getColumnModel().getColumn(i);
            TableCellEditor tce = new DefaultCellEditor(jcb);
            tc.setCellEditor(tce);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBactualizar;
    private javax.swing.JComboBox JCBdias;
    private javax.swing.JComboBox JCBhorainicio;
    private javax.swing.JTable JThoras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
